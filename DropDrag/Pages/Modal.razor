@using DropDrag.Data

@inject IJSRuntime JsRuntime
<div class="modal fade show" id="kt_modal_new_target" tabindex="-1" style="display: block;" aria-modal="true" role="dialog">
	<!--begin::Modal dialog-->
	<div class="modal-dialog modal-dialog-centered mw-100 mx-10" style="height: 90% !important">
		<!--begin::Modal content-->
		<div class="modal-content rounded h-100">
			<!--begin::Modal header-->
			<div class="modal-header py-1 border-0 justify-content-between">
                <div>
                    <h4 class="fw-bold">TAN CANG 28</h4>
                </div>
				<!--begin::Close-->
				<div class="btn btn-sm btn-icon btn-active-color-primary" @onclick="Cancel" data-bs-dismiss="modal">
					<!--begin::Svg Icon | path: icons/duotune/arrows/arr061.svg-->
					<span class="svg-icon svg-icon-1">
						<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
							<rect opacity="0.5" x="6" y="17.3137" width="16" height="2" rx="1" transform="rotate(-45 6 17.3137)" fill="black"></rect>
							<rect x="7.41422" y="6" width="16" height="2" rx="1" transform="rotate(45 7.41422 6)" fill="black"></rect>
						</svg>
					</span>
					<!--end::Svg Icon-->
				</div>
				<!--end::Close-->
			</div>
			<!--begin::Modal header-->
			<!--begin::Modal body-->
			<div class="modal-body px-4 px-lg-10 pt-0 pb-0">
				<div class="row py-3">
                    <div class="col-2 ">
                        <div class="scroll-y " style="height: @(Height*0.78)px">
                            <Dropzone Items="MyFirstList" Class="">
                                <div class="component-block-left">
                                    <Component item="@context"></Component>
                                </div>
                            </Dropzone>
                        </div>
                    </div>
                    <div class="col-10">
                        <div class="">
                            @for (var i = 0; i < Blocks; i++)
                            {
                                <Block Rows="@Rows" Cols="@Cols" Height="@(Height*0.78/Blocks - 13)"></Block>
                                <div class="py-2"></div>
                            }
                        </div>
                        
                    </div>
                </div>
			</div>
			<!--end::Modal body-->
            
			<!--begin::Actions-->
			<div class="d-flex align-items-center ps-5">
				<button type="submit" @onclick="Cancel" id="kt_modal_new_target_submit" class="btn btn-primary">
					<span class="indicator-label">Submit</span>
				</button>
				<button type="reset" @onclick="SubmitForm" id="kt_modal_new_target_cancel" class="btn btn-light me-3">Cancel</button>
			</div>
		</div>
		<!--end::Modal content-->
	</div>
	<!--end::Modal dialog-->
</div>

@code {
    [CascadingParameter]
    BlazoredModalInstance ModalInstance { get; set; }

    private List<TodoItem> item = new List<TodoItem>(5);

    private TodoItem lastdropped { get; set; }

    [Parameter] public int Rows { get; set; } = 4;
    [Parameter] public int Cols { get; set; } = 8;
    [Parameter] public int Blocks { get; set; } = 6;
    public List<TodoItem> MyFirstList = new List<TodoItem>();

    public int Height { get; set; }
    public int Width { get; set; }

    protected override async Task OnInitializedAsync()
    {
        for (int i = 0; i < 100; i++)
        {
            {
                MyFirstList.Add(new TodoItem() {Title = "Container " + (i + 1).ToString(), Description = "Mô tả" });
            }
        }
        var dimension = await JsRuntime.InvokeAsync<WindowDimension>("getWindowDimensions");
        Height = dimension.Height;
        Width = dimension.Width;
    }
    public class WindowDimension
    {
        public int Width { get; set; }
        public int Height { get; set; }
    }
    void SubmitForm()
    {
        //ModalInstance.CloseAsync();
        ModalInstance.Close(ModalResult.Ok($"Form was submitted successfully."));
    }

    void Cancel()
    {
        //ModalInstance.CancelAsync();
        ModalInstance.Cancel();
    }
}

