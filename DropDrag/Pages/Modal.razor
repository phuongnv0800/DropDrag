@using DropDrag.Data

<style>
    .T-box{
        height: @((Math.Round((Height*0.86)/Blocks) - 13).ToString())px;
        width: auto;
    }
</style>

@inject IJSRuntime JsRuntime
<div class="modal fade show" id="kt_modal_new_target" tabindex="-1" style="display: block;" aria-modal="true" role="dialog">
	<div class="modal-fullscreen modal-dialog modal-dialog-centered mw-100  " style="height: 100% !important;">
		<div class="modal-content rounded h-100" id="sizeModal">
			<div class="modal-header border-0 justify-content-between" style="height: @(Math.Round(Height*0.07).ToString())px">
                <div>
                    <h4 class="fw-bold">TAN CANG 28</h4>
                </div>
				<!--begin::Close-->
				<div class="btn btn-sm btn-icon btn-active-color-primary" @onclick="Cancel" data-bs-dismiss="modal">
					<!--begin::Svg Icon | path: icons/duotune/arrows/arr061.svg-->
					<span class="svg-icon svg-icon-1">
						<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
							<rect opacity="0.5" x="6" y="17.3137" width="16" height="2" rx="1" transform="rotate(-45 6 17.3137)" fill="black"></rect>
							<rect x="7.41422" y="6" width="16" height="2" rx="1" transform="rotate(45 7.41422 6)" fill="black"></rect>
						</svg>
					</span>
					<!--end::Svg Icon-->
				</div>
				<!--end::Close-->
			</div>
			<div class="modal-body px-10 pt-0 pb-0">
				<div class="row">
                    <div class="col-2">
                        <div class="scroll-y " style="height: @(Math.Round(Height*0.86).ToString())px">
                            <Dropzone Items="MyFirstList" Class="">
                                <div class="component-block-left">
                                    <Component item="@context"></Component>
                                </div>
                            </Dropzone>
                        </div>
                    </div>
                    <div class = "col-1 d-flex">
                        <div style="width: 40%">
                            @for (var i = 0; i < Blocks; i++)
                            {
                                    <div class="d-flex align-items-center T-box " style="background-color: blue">
                                        <p style="font-size: 16px">T0 @i</p>
                                    </div>
                                    <div class="py-2"></div>
                            }
                        </div>
                        <div style="width: 60%" class="text-end">
                            @for(var i = 0; i < Blocks; i++)
                            {
                                for(var j = 0 ; j < Rows; j++)
                                {
                                    <h6 style="font-size: 16px">@i@j</h6>
                                }
                                <div class="py-2"></div>
                            }
                            
                        </div>
                    </div>
                    <div class="col-9" >
                        <div class="" id="widthBlock">
                            @for (var i = 0; i < Blocks; i++)
                            {
                                @*0.86 là 86% chiều cao của modal, 13 là 13 px của py-2(khoảng cách của mỗi block) *@
                                <Block Rows="@Rows" Cols="@Cols" Height="@(Math.Round(Height*0.86)/Blocks - 13)" Width="@WidthBlock" BlockId="@i"></Block>
                                <div class="py-2"></div>
                            }
                        </div>
                        
                    </div>
                </div>
			</div>
			<div class="d-flex align-items-center ps-5 mb-1" style="height: @(Math.Round(Height*0.07).ToString())px">
				<button type="submit" @onclick="Cancel" id="kt_modal_new_target_submit" class="btn btn-sm btn-primary me-3">
					<span class="indicator-label">Submit</span>
				</button>
				<button type="reset" @onclick="SubmitForm" id="kt_modal_new_target_cancel" class="btn btn-sm btn-light">Cancel</button>
			</div>
		</div>
	</div>
</div>

@code {
    [CascadingParameter]
    BlazoredModalInstance ModalInstance { get; set; }

    [Parameter]
    public int Rows { get; set; } = 4;
    [Parameter]
    public int Cols { get; set; } = 8;
    [Parameter]
    public int Blocks { get; set; } = 6;

    public List<TodoItem> MyFirstList = new List<TodoItem>();

    protected override async Task OnInitializedAsync()
    {
        for (int i = 0; i < 100; i++)
            MyFirstList.Add(new TodoItem() {Title = "Container " + (i + 1).ToString(), Description = "Mô tả" });
    }

    public class WindowDimension
    {
        public int Width { get; set; }
        public int Height { get; set; }
    }
    public int Height { get; set; }


    public int WidthBlock { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
            var dimension = await JsRuntime.InvokeAsync<WindowDimension>("getWindowDimensions");
            Height = dimension.Height;

            var blockDimension = await JsRuntime.InvokeAsync<WindowDimension>("getBlockDimensions");
            WidthBlock = blockDimension.Width/Cols;
            Console.WriteLine(WidthBlock);
            StateHasChanged();
    }
    void SubmitForm() => ModalInstance.Close(ModalResult.Ok($"Form was submitted successfully."));

    void Cancel() => ModalInstance.Cancel();
}

