@using DropDrag.Data

<style>
    .box-size{
         box-sizing: border-box;
    }
    .cells {
        padding: 1px;
        height: @(Math.Round(Height / Rows).ToString())px;
    }
    .cell-div {

        height: 98%;
        width: 100%;
        box-shadow:  0 0 1.5px 1.5px #ccc inset;
        border: 0;
    }
    .category1 {
        width: @(Math.Round(Width).ToString())px;

        /*background-color: #efd;*/
    }
    .category2 {
        width: @(Math.Round(Width + Width).ToString())px;

    }
</style>




@for (int row = 0; row < Rows; row++)
{
    <div class="d-flex">

        @for (int col = 0; col < matrix[row].Count; col++)
        {
            @if (matrix[row][col].Category == 1)
            {
                <div class="cells category1 d-flex justify-content-center align-items-center">
                    <Dropzone Class="cell-div  box-size  text-center" Items="matrix[row][col].TodoItemList" MaxItems="1">
                        <Cell item="@context" BlockId="@BlockId" RowId = "@row" ColId="@col"></Cell>
                    </Dropzone>
                </div>

            }
            else
            {
                <div class="cells category2 d-flex justify-content-center align-items-center">
                    <Dropzone Class="cell-div  box-size  text-center" Items="matrix[row][col].TodoItemList" MaxItems="1">
                        <Cell item="@context" BlockId="@BlockId" RowId = "@row" ColId="@col"></Cell>
                    </Dropzone>
                </div>
            }
        }

    </div>
}


@code {
    [Parameter] public int Rows { get; set; }
    [Parameter] public int Cols { get; set; }
    [Parameter] public double Height { get; set; }
    [Parameter] public double Width { get; set; }
    [Parameter] public int BlockId { get; set; }
    private List<List<TodoItems>> matrix = new List<List<TodoItems>>();
    protected override void OnInitialized()
    {
        Random r = new();
        for (int i = 0; i < Rows; i++)
        {
            var colListTodo = new List<TodoItems>();
            for (int j = 0; j < Cols; j++)
            {
                if (r.Next(0, 10) > 5 && j != (Cols - 1) && j != (Cols - 2))
                {
                    colListTodo.Add(new TodoItems()
                    {
                        Category = 2
                    });
                    ++j;
                }
                else
                    colListTodo.Add(new TodoItems()
                    {
                        Category = 1
                    });
            }
            matrix.Add(colListTodo);
        }
    }
}